"use strict";

sap.ui.define(["sap/ui/core/mvc/XMLView", "./controllers/AddFragment.controller", "./controllers/ControllerExtension.controller"], function (XMLView, __AddFragment, __ControllerExtension) {
  "use strict";

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule && typeof obj.default !== "undefined" ? obj.default : obj;
  }
  const AddFragment = _interopRequireDefault(__AddFragment);
  const ControllerExtension = _interopRequireDefault(__ControllerExtension);
  var DialogNames = /*#__PURE__*/function (DialogNames) {
    DialogNames["ADD_FRAGMENT"] = "AddFragment";
    DialogNames["CONTROLLER_EXTENSION"] = "ControllerExtension";
    return DialogNames;
  }(DialogNames || {});
  /**
   * Adds a new item to the context menu
   *
   * @param rta Runtime Authoring
   */
  const initDialogs = rta => {
    const contextMenu = rta.getDefaultPlugins().contextMenu;
    contextMenu.addMenuItem({
      id: 'ADD_FRAGMENT',
      text: 'Add: Fragment',
      handler: async overlays => await handler(overlays[0], rta, DialogNames.ADD_FRAGMENT),
      icon: 'sap-icon://attachment-html'
    });
    contextMenu.addMenuItem({
      id: 'EXTEND_CONTROLLER',
      text: 'Extend With Controller',
      handler: async overlays => await handler(overlays[0], rta, DialogNames.CONTROLLER_EXTENSION),
      icon: 'sap-icon://create-form'
    });
  };

  /**
   * Handler for new context menu entry
   *
   * @param overlays Control overlays
   * @param rta Runtime Authoring
   * @param dialogName Dialog name
   */
  async function handler(overlays, rta, dialogName) {
    const controller = dialogName === DialogNames.ADD_FRAGMENT ? new AddFragment(`open.ux.preview.client.adp.controllers.${dialogName}`, overlays, rta) : new ControllerExtension(`open.ux.preview.client.adp.controllers.${dialogName}`, overlays, rta);
    await XMLView.create({
      viewName: `open.ux.preview.client.adp.ui.${dialogName}`,
      controller
    });
  }
  var __exports = {
    __esModule: true
  };
  __exports.DialogNames = DialogNames;
  __exports.initDialogs = initDialogs;
  __exports.handler = handler;
  return __exports;
});
//# sourceMappingURL=init-dialogs.js.map